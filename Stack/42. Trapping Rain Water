Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1].
In this case, 6 units of rain water (blue section) are being trapped.

first we find the max left and max right 
then we find minimum between them


class Solution {
    public int trap(int[] height) {
        int mxl []=new int [height.length];
        int mxr []=new int [height.length];
            mxl[0]=height[0];
            mxr[height.length-1]=height[height.length-1];
        for(int i=1;i<height.length;i++){
                mxl[i]=Math.max(mxl[i-1],height[i]);
        }

        for(int i=height.length-2;i>=0;i--){
             mxr[i]=Math.max(mxr[i+1],height[i]);
        }

        int water[]=new int [height.length];
        for(int i=0;i<height.length;i++){
            water[i]=Math.min(mxl[i],mxr[i])-height[i];
        }
            int sum=0;
        for(int i=0;i<water.length;i++){
                sum=sum+water[i];
        }
        return sum;
    }
}
