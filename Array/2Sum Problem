class Solution {
    public int[] twoSum(int[] nums, int target) {
        int n=nums.length;
        int a[]=new int[2];
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<n;i++){
        if(map.containsKey(target-nums[i])){
            a[0]=i;
            a[1]=map.get(target-nums[i]);
        } else map.put(nums[i],i);}
        return a;
    }
}

Example 1:
Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].

Example 2:
Input: nums = [3,2,4], target = 6
Output: [1,2]
Example 3:
Input: nums = [3,3], target = 6
Output: [0,1]
